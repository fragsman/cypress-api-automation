{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-01-24T20:33:41.635Z",
    "end": "2025-01-24T20:33:59.805Z",
    "duration": 18170,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3c5ac48e-4c04-4056-849d-c11904ac3815",
      "title": "",
      "fullFile": "cypress\\e2e\\typeTests.spec.js",
      "file": "cypress\\e2e\\typeTests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "075cba41-4a1e-4bf2-a104-263d4c7fbe93",
          "title": "Typing tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Using hotkeys",
              "fullTitle": "Typing tests Using hotkeys",
              "timedOut": null,
              "duration": 7040,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//In this page pressing Ctrl+K will open a search box. I want to simulate that\ncy.visit(\"https://docs.cypress.io/api/commands/type\");\ncy.wait(5000);\n//Option 1\ncy.get(\"body\").type(\"{ctrl+k}\");\ncy.get(\".DocSearch-Input\").type(\"intercept\");\ncy.get(\"#docsearch-item-0\").focus().click();\n//Option 2\n//cy.get('body').trigger('keydown', { ctrlKey: true, keyCode: 75}) //75 = K\n//Option 3\n//cy.get('body').trigger('keydown', { keyCode: 17, release : false}) //17 = Ctrl\n//cy.get('body').trigger('keydown', { keyCode: 75, release : false}) //75 = K\n//Option 4\n//cy.get('body').trigger('keydown', { eventConstructor: \"KeyboardEvent\", ctrlKey: true, keyCode: 75}) //75 = K\n//Option 5\n//cy.get('body').trigger('keydown', { eventConstructor: \"KeyboardEvent\", keyCode: 17, release : false}) //17 = Ctrl\n//cy.get('body').trigger('keydown', { eventConstructor: \"KeyboardEvent\", keyCode: 75}) //75 = K",
              "err": {
                "message": "CypressError: `cy.focus()` can only be called on a valid focusable element. Your subject is a: `<li class=\"DocSearch-Hit\" id=\"docsearch-item-0\" role=\"option\" aria-selected=\"true\">...</li>`\n\nhttps://on.cypress.io/focus",
                "estack": "CypressError: `cy.focus()` can only be called on a valid focusable element. Your subject is a: `<li class=\"DocSearch-Hit\" id=\"docsearch-item-0\" role=\"option\" aria-selected=\"true\">...</li>`\n\nhttps://on.cypress.io/focus\n    at Context.focus (https://docs.cypress.io/__cypress/runner/cypress_runner.js:112429:70)\n    at wrapped (https://docs.cypress.io/__cypress/runner/cypress_runner.js:137197:19)\nFrom Your Spec Code:\n    at captureUserInvocationStack (https://docs.cypress.io/__cypress/runner/cypress_runner.js:138199:94)\n    at Assertion.assert (https://docs.cypress.io/__cypress/runner/cypress_runner.js:138227:9)\n    at Assertion.<anonymous> (https://docs.cypress.io/__cypress/runner/cypress_runner.js:138169:25)\n    at Assertion.overwritingPropertyGetter (https://docs.cypress.io/__cypress/runner/cypress_runner.js:77985:37)\nat Reflect.get (<anonymous>)\n    at Object.proxyGetter [as get] (https://docs.cypress.io/__cypress/runner/cypress_runner.js:77851:22)\n    at exists (https://docs.cypress.io/__cypress/runner/cypress_runner.js:142048:26)\n    at elExists (https://docs.cypress.io/__cypress/runner/cypress_runner.js:142063:10)\n    at ensureExistence (https://docs.cypress.io/__cypress/runner/cypress_runner.js:142244:22)\n    at onFailFn (https://docs.cypress.io/__cypress/runner/cypress_runner.js:142273:53)",
                "diff": null
              },
              "uuid": "e3088830-1ed3-4b30-b8de-19a94fefd30b",
              "parentUUID": "075cba41-4a1e-4bf2-a104-263d4c7fbe93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e3088830-1ed3-4b30-b8de-19a94fefd30b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7040,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}